{"version":3,"sources":["logo.svg","List.js","App.js","reportWebVitals.js","index.js"],"names":["List","useState","list","setList","listArr","setListArr","tot","setTot","totadd","duplist","totall","idex","length","qtity","quantity","className","placeholder","type","onChange","e","preventDefault","target","value","handler","onClick","details","id","Date","now","active","text","addlists","map","item","key","ind","findIndex","decrementor","incrementor","checking","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAe,I,yBCyFAA,MAtFf,WACC,IAAD,EACwBC,mBAAS,IADjC,mBACOC,EADP,KACaC,EADb,OAE8BF,mBAAS,IAFvC,mBAEOG,EAFP,KAEgBC,EAFhB,OAGqBJ,mBAAS,GAH9B,mBAGOK,EAHP,KAGWC,EAHX,KAqCMC,EAAQ,WAGV,IAFA,IAAMC,EAAUL,EACZM,EAAO,EACFC,EAAO,EAAGA,EAAOF,EAAQG,OAAQD,IAAQ,CAC9C,IAAIE,EAAQJ,EAAQE,GAAMG,SACtBD,GAAS,IACTH,GAAUG,GAGlBN,EAAOG,IAWX,OACO,8BACI,sBAAKK,UAAU,YAAf,UACM,uBAAMA,UAAU,WAAhB,UACG,uBAAOC,YAAY,kBAAkBC,KAAK,OAAOC,SAAU,SAACC,GAAD,OAzD/D,SAACA,GACdA,EAAEC,iBACDjB,EAAQgB,EAAEE,OAAOC,OAuD+DC,CAAQJ,IAAIG,MAAOpB,IAC/E,wBAAQe,KAAK,SAASO,QAAS,SAAAL,GAAC,OAtDxC,SAACA,GACfA,EAAEC,iBACA,IAAMX,EAAO,YAAOL,GACpB,GAAU,IAANF,EAAU,CACV,IAAMuB,EAAU,CACZC,GAAGC,KAAKC,MACRC,QAAS,EACTC,KAAO5B,EACPY,SAAW,GAEfT,EAAW,GAAD,mBAAKI,GAAL,CAAagB,MA4C2BM,CAASZ,IAA3C,kBAER,oBAAIJ,UAAU,UAAd,SACKX,EAAQ4B,KAAI,SAAAC,GAAI,OACD,oBAAkBlB,UAAU,SAA5B,SACA,oCACA,mBAAGA,UAAYkB,EAAKJ,OAAO,OAAO,UAAlC,SAA+CI,EAAKH,OACpD,sBAAKf,UAAU,OAAf,UACA,wBAASS,QAAS,kBAjDnC,SAAAU,GACf,IAAMzB,EAAO,YAAOL,GACd+B,EAAM1B,EAAQ2B,WAAU,SAAAH,GAAI,OAAIA,EAAKP,KAAKQ,KAC5CzB,EAAQ0B,GAAKrB,SAAW,IACxBL,EAAQ0B,GAAKrB,WACbT,EAAW,YAAII,IACfD,KA2CkD6B,CAAYJ,EAAKP,KAAvC,eACA,iCAASO,EAAKnB,WACd,wBAAQU,QAAS,kBA1CnC,SAACU,GACf,IAAMzB,EAAO,YAAOL,GACd+B,EAAM1B,EAAQ2B,WAAU,SAAAH,GAAI,OAAIA,EAAKP,KAAKQ,KAChDzB,EAAQ0B,GAAKrB,WACbT,EAAW,YAAII,IACfD,IAqCqD8B,CAAYL,EAAKP,KAAtC,eACA,wBAAQX,UAAU,OAAOS,QAAS,YAzBrD,SAACU,GACd,IAAMzB,EAAO,YAAOL,GACd+B,EAAM1B,EAAQ2B,WAAU,SAAAH,GAAI,OAAIA,EAAKP,KAAKQ,KAChDzB,EAAQ0B,GAAR,2BACO1B,EAAQ0B,IADf,IAEIN,QAAS,IAEbxB,EAAW,YAAII,IAkBwD8B,CAASN,EAAKP,KAArD,sBAPSO,EAAKP,SAa/B,oBAAGX,UAAU,QAAQG,SAAU,kBAAIV,KAAnC,4BAA4D,uCAAWF,cCvE3EkC,MARf,WACE,OACE,qBAAKzB,UAAU,MAAf,SACE,cAAC,EAAD,OCKS0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cb8ef298.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState} from 'react'\r\nimport './App.css';\r\n\r\nfunction List()\r\n{\r\nconst [list, setList] = useState('');\r\nconst [listArr, setListArr] = useState([]);\r\nconst [tot,setTot] = useState(0);\r\nconst handler = (e) =>{\r\n   e.preventDefault();\r\n    setList(e.target.value)\r\n}\r\nconst addlists =(e)=>{\r\n  e.preventDefault();\r\n    const duplist = [...listArr]\r\n    if (list!='') {\r\n        const details = {\r\n            id:Date.now(),\r\n            active : true,\r\n            text : list,\r\n            quantity : 0\r\n        }\r\n        setListArr([...duplist,details])\r\n    }\r\n}\r\nconst decrementor= key =>{ \r\n    const duplist = [...listArr];\r\n    const ind = duplist.findIndex(item => item.id===key )\r\n    if (duplist[ind].quantity > 0) {\r\n        duplist[ind].quantity--;\r\n        setListArr([...duplist])  \r\n        totadd();\r\n    }\r\n} \r\nconst incrementor=(key)=>{\r\n    const duplist = [...listArr];\r\n    const ind = duplist.findIndex(item => item.id===key )\r\n    duplist[ind].quantity++;\r\n    setListArr([...duplist])\r\n    totadd();\r\n}\r\nconst totadd= ()=>{\r\n    const duplist = listArr;\r\n    var totall=0;\r\n    for (let idex = 0; idex < duplist.length; idex++) {\r\n        var qtity = duplist[idex].quantity;\r\n        if (qtity >= 0) {\r\n            totall += qtity; \r\n        } \r\n    }\r\n    setTot(totall)\r\n}\r\nconst checking = (key) =>{\r\n    const duplist = [...listArr];\r\n    const ind = duplist.findIndex(item => item.id===key )\r\n    duplist[ind]= {\r\n        ...duplist[ind], \r\n        active : false\r\n    }\r\n    setListArr([...duplist])\r\n}\r\nreturn ( \r\n       <div>\r\n           <div className='container'>\r\n                 <form className='formmain'>\r\n                    <input placeholder='Enter item.....' type='text' onChange={(e)=>handler(e)} value={list}/>  \r\n                        <button type='submit' onClick={e=>addlists(e)}>+</button>\r\n                </form>\r\n                <ul className='submain' >\r\n                    {listArr.map(item =>   \r\n                                    <li key={item.id} className='active'>\r\n                                    <section>\r\n                                    <p className={(item.active?'tive':'nottive')}>{item.text}</p> \r\n                                    <div className='sets'>\r\n                                    <button  onClick={()=>decrementor(item.id)}>-</button>\r\n                                    <button>{item.quantity}</button>\r\n                                    <button onClick={()=>incrementor(item.id)}>+</button>\r\n                                    <button className='last' onClick={()=>{checking(item.id)}}>a</button>\r\n                                    </div>\r\n                                    </section>\r\n                                    </li>\r\n                     )}\r\n                </ul>\r\n                   <p className='total' onChange={()=>totadd()}>Total Items =  <button> { tot}</button></p> \r\n            </div> \r\n        </div>             \r\n    )\r\n}\r\n\r\nexport default List\r\n","import logo from './logo.svg';\nimport List from './List'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}